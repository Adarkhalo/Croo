{"ast":null,"code":"import _slicedToArray from \"/home/emmanuelchaput/Documents/Web/croo-technical-assignment/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/emmanuelchaput/Documents/Web/croo-technical-assignment/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport \"./scss/style.scss\";\n\nfunction App() {\n  var _this2 = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameInput = _useState2[0],\n      setNameInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      emailInput = _useState4[0],\n      setEmailInput = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      commentInput = _useState6[0],\n      setCommentInput = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      comments = _useState8[0],\n      setComments = _useState8[1];\n\n  var _useState9 = useState(0),\n      _useState10 = _slicedToArray(_useState9, 2),\n      timer = _useState10[0],\n      setTimer = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      formError = _useState12[0],\n      setFormError = _useState12[1];\n\n  var _useState13 = useState(\"email\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      sortParameter = _useState14[0],\n      setSortParameter = _useState14[1];\n\n  var _useState15 = useState(\"ASC\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      sortDirection = _useState16[0],\n      setSortDirection = _useState16[1];\n\n  useEffect(function () {\n    var interval = setInterval(function () {\n      getComments();\n    }, timer);\n    setTimer(1000);\n    return function () {\n      return clearInterval(interval);\n    };\n  }, [comments]);\n\n  function getComments() {\n    var _this = this;\n\n    fetch(\"/getComments?sortby=\" + sortParameter + \"&sortdirection=\" + sortDirection).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      var html = \"\";\n      data.forEach(function (userComment) {\n        html += \"<div>\";\n        html += \"<div>\";\n        html += \"<p>\" + userComment['inserted_on'] + \"</p>\";\n        html += \"<p>By <a href=mailto:'\" + userComment['email'] + \"'>\" + userComment['name'] + \"</a></p>\";\n        html += \"</div>\";\n        html += \"<p>\" + userComment['comment'] + \"</p>\";\n        html += \"</div>\";\n      });\n      setComments( /*#__PURE__*/React.createElement(\"div\", {\n        className: \"commentsHistory\",\n        dangerouslySetInnerHTML: {\n          __html: html\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }));\n    }, []);\n  }\n\n  var handleSubmit = function handleSubmit(event) {\n    event.preventDefault();\n    setFormError(\"\");\n\n    if (!nameInput || !emailInput || !commentInput) {\n      setFormError( /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        dangerouslySetInnerHTML: {\n          __html: \"All fields of the form must be completed to submit a comment.\"\n        },\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }\n      }));\n      return;\n    }\n\n    var requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\"\n      },\n      body: JSON.stringify({\n        'name': nameInput,\n        'email': emailInput,\n        'comment': commentInput\n      })\n    };\n    fetch(\"/saveComment\", requestOptions).then(function (res) {\n      return res.json();\n    }).then(function (data) {}).catch(function () {\n      setFormError( /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        dangerouslySetInnerHTML: {\n          __html: \"Make sure all the fields on the form are valid.\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }\n      }));\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filtersModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    alt: \"date\",\n    onChange: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, \"Sort by Date\"), /*#__PURE__*/React.createElement(\"span\", {\n    alt: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, \"Sort by Name\"), /*#__PURE__*/React.createElement(\"span\", {\n    alt: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Sort by Email\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"commentsModule\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Comments\"), comments, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Leave a Comment\"), formError, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Your name *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Phil Leggeter\",\n    name: \"name\",\n    value: nameInput,\n    onChange: function onChange(e) {\n      return setNameInput(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Your email *\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"philleggeter@gmail.com\",\n    value: emailInput,\n    onChange: function onChange(e) {\n      return setEmailInput(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Comments\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    type: \"text\",\n    name: \"comment\",\n    value: commentInput,\n    onChange: function onChange(e) {\n      return setCommentInput(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Submit comment\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/emmanuelchaput/Documents/Web/croo-technical-assignment/src/App.js"],"names":["React","useState","useEffect","App","nameInput","setNameInput","emailInput","setEmailInput","commentInput","setCommentInput","comments","setComments","timer","setTimer","formError","setFormError","sortParameter","setSortParameter","sortDirection","setSortDirection","interval","setInterval","getComments","clearInterval","fetch","then","res","json","data","html","forEach","userComment","__html","handleSubmit","event","preventDefault","requestOptions","method","headers","Accept","body","JSON","stringify","catch","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./scss/style.scss\";\n\nfunction App() {\n\n  const [nameInput, setNameInput] = useState(\"\");\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [commentInput, setCommentInput] = useState(\"\");\n  const [comments, setComments] = useState([]);\n  const [timer, setTimer] = useState(0);\n  const [formError, setFormError] = useState(\"\");\n  const [sortParameter, setSortParameter] = useState(\"email\");\n  const [sortDirection, setSortDirection] = useState(\"ASC\");\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n        getComments();\n    }, timer);\n    setTimer(1000);\n    return () => clearInterval(interval);\n  }, [comments]);\n\n\n  function getComments() {\n    fetch(\"/getComments?sortby=\" + sortParameter + \"&sortdirection=\" + sortDirection)\n      .then((res) => res.json())\n      .then((data) => {\n        let html = \"\";\n        data.forEach(function (userComment) {\n          html += \"<div>\";\n          html +=   \"<div>\";\n          html +=     \"<p>\" + userComment['inserted_on'] + \"</p>\";\n          html +=     \"<p>By <a href=mailto:'\" + userComment['email'] + \"'>\" + userComment['name'] + \"</a></p>\";\n          html +=   \"</div>\";\n          html +=   \"<p>\" + userComment['comment'] + \"</p>\";\n          html += \"</div>\";\n        });\n        setComments(<div className=\"commentsHistory\" dangerouslySetInnerHTML={{ __html: html }} />);\n      }, []);\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    setFormError(\"\");\n\n    if (!nameInput || !emailInput || !commentInput) {\n      setFormError(<p className=\"error\" dangerouslySetInnerHTML={{ __html: \"All fields of the form must be completed to submit a comment.\" }} />);\n      return;\n    }\n\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({'name':nameInput, 'email':emailInput, 'comment':commentInput})\n    };\n\n    fetch(\"/saveComment\", requestOptions)\n      .then((res) => res.json())\n      .then((data) => {\n      }).catch(function() {\n        setFormError(<p className=\"error\" dangerouslySetInnerHTML={{ __html: \"Make sure all the fields on the form are valid.\" }} />);\n    });\n  }\n\n  return (\n    <div>\n      <div className=\"filtersModule\">\n        <span alt=\"date\" onChange>Sort by Date</span>\n        <span alt=\"name\">Sort by Name</span>\n        <span alt=\"email\">Sort by Email</span>\n      </div>\n      <div className=\"commentsModule\">\n        <p className=\"title\">Comments</p>\n        {comments}\n        <p className=\"title\">Leave a Comment</p>\n        {formError}\n        <form onSubmit={handleSubmit}>\n          <label>Your name *</label>\n          <input type=\"text\" placeholder=\"Phil Leggeter\" name=\"name\" value={nameInput} onChange={e => setNameInput(e.target.value)}/>\n          <label>Your email *</label>\n          <input type=\"text\" name=\"email\" placeholder=\"philleggeter@gmail.com\" value={emailInput} onChange={e => setEmailInput(e.target.value)}/>\n          <label>Comments</label>\n          <textarea type=\"text\" name=\"comment\" value={commentInput} onChange={e => setCommentInput(e.target.value)}></textarea>\n          <button type=\"submit\">Submit comment</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}